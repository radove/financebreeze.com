{"version":3,"sources":["components/structure/DataTable.js","components/visualization/MortgagePayoffOverTime.js","pages/DashboardView.js","pages/SearchView.js","theme.js","components/structure/Main.js","App.js","serviceWorker.js","index.js","static/logo.png"],"names":["React","Component","desc","a","b","orderBy","DataTable","props","handleChangePage","event","page","setState","handleChangeRowsPerPage","rowsPerPage","target","value","state","q","order","categories","handleRequestSort","bind","this","property","dataset","data","x","Table","style","margin","TableBody","TableRow","height","padding","headers","map","header","TableCell","fontWeight","fontSize","key","name","sortDirection","orderbyname","Tooltip","title","display","placement","mouseEnterDelay","TableSortLabel","active","direction","onClick","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","row","cells","columns","forEach","c","push_cell","widgets","w","onClickColumn","widget","push","Typography","onClickFunction","color","cursor","textDecoration","IconButton","width","align","TablePagination","colSpan","count","length","onChangePage","onChangeRowsPerPage","withStyles","theme","formatter","Intl","NumberFormat","currency","minimumFractionDigits","DashboardView","_onMouseLeave","crosshairValues","_onNearestX","time","moment","format","crosshairValue","y","crosshairDate","additionaldata","lastDrawLocation","updateWindowDimensions","amortization","upsidedown","currentDateFull","currentDateQuick","monthlyInterest","interest","remainingBalance","remainingBalanceWithAdditionalPayment","interestPaidFull","interestPaidQuick","totalMonthly","principle","currentMortgagePayment","add","calendar","valueOf","additionalMortgagePayment","amortizationPoint","diffInYears","diff","yearsLeft","setInterestSaved","setYearsSaved","setAmortizationSchedule","document","getElementById","widthDetect","clientWidth","window","innerHeight","removeEventListener","handleExitFullscreen","addEventListener","refreshData","prevProps","classes","onMouseLeave","animation","right","left","xType","xDomain","yDomain","bottom","top","opacity","fill","tickTotal","stroke","strokeWidth","strokeDasharray","strokeOpacity","fillOpacity","pointerEvents","brushing","curve","onNearestX","values","line","backgroundColor","Chip","avatar","Avatar","label","className","chip","onBrushEnd","area","onDrag","root","flexGrow","paperMain","flex","flexDirection","paper","spacing","textAlign","palette","text","secondary","media","saved","years","interestPaid","handleChange","interestSaved","saveSession","loadSession","setAmortization","replace","localStorage","setItem","getItem","Grid","container","item","xs","Paper","alt","src","Logo","sclassName","noValidate","autoComplete","xl","lg","md","sm","TextField","id","textField","onChange","Card","CardHeader","subheader","CardContent","MortgagePayoffOverTime","yearsSaved","variant","allowOrdering","marginLeft","marginRight","SearchView","Theme","createMuiTheme","primary","main","overrides","MuiDrawer","MuiDivider","MuiListItemIcon","typography","fontFamily","join","styles","button","minHeight","drawer","breakpoints","up","flexShrink","appContent","mainContent","Main","handleDrawerToggle","mobileOpen","landing","handlePageLanding","code","landingcode","mainpage","MuiThemeProvider","Container","maxWidth","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.fe0c0cc7.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\r\nimport LastPageIcon from '@material-ui/icons/LastPage'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport 'moment-timezone'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nclass TablePaginationActions extends React.Component {\r\n    handleFirstPageButtonClick = event => {\r\n        this.props.onChangePage(event, 0)\r\n    }\r\n\r\n    handleBackButtonClick = event => {\r\n        this.props.onChangePage(event, this.props.page - 1)\r\n    }\r\n\r\n    handleNextButtonClick = event => {\r\n        this.props.onChangePage(event, this.props.page + 1)\r\n    }\r\n\r\n    handleLastPageButtonClick = event => {\r\n        this.props.onChangePage(event, Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1))\r\n    }\r\n\r\n    render() {\r\n        const { classes, count, page, rowsPerPage, theme } = this.props\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <IconButton onClick={this.handleFirstPageButtonClick} disabled={page === 0} aria-label=\"First Page\">\r\n                    {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n                </IconButton>\r\n                <IconButton onClick={this.handleBackButtonClick} disabled={page === 0} aria-label=\"Previous Page\">\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n                </IconButton>\r\n                <IconButton onClick={this.handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"Next Page\">\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                </IconButton>\r\n                <IconButton onClick={this.handleLastPageButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"Last Page\">\r\n                    {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1\r\n    }\r\n    return 0\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n    const stabilizedThis = array.map((el, index) => [el, index])\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = cmp(a[0], b[0])\r\n        if (order !== 0) return order\r\n        return a[1] - b[1]\r\n    })\r\n    return stabilizedThis.map(el => el[0])\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy)\r\n}\r\n\r\nconst styles = theme => ({})\r\n\r\nclass DataTable extends React.Component {\r\n    handleChangePage = (event, page) => {\r\n        this.setState({ page })\r\n    }\r\n\r\n    handleChangeRowsPerPage = event => {\r\n        this.setState({ rowsPerPage: event.target.value })\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.props = props\r\n        this.state = {\r\n            rowsPerPage: 10,\r\n            q: '',\r\n            order: 'desc',\r\n            categories: [],\r\n            orderBy: '',\r\n            page: 0,\r\n        }\r\n        this.handleRequestSort = this.handleRequestSort.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ rowsPerPage: this.props.rowsPerPage, order: this.props.order, orderBy: this.props.orderBy })\r\n    }\r\n    handleRequestSort(property) {\r\n        const orderBy = property\r\n        let order = 'desc'\r\n\r\n        if (this.state.orderBy === property && this.state.order === 'desc') {\r\n            order = 'asc'\r\n        }\r\n        this.setState({ order, orderBy })\r\n    }\r\n\r\n    render() {\r\n        const { rowsPerPage, page, order, orderBy } = this.state\r\n        // const { classes } = this.props;\r\n\r\n        let dataset = this.props.data\r\n\r\n        //let emptyRows = rowsPerPage - Math.min(rowsPerPage, 0 - page * rowsPerPage);\r\n\r\n        if (dataset) {\r\n            //emptyRows = rowsPerPage - Math.min(rowsPerPage, dataset.length - page * rowsPerPage);\r\n        } else {\r\n            dataset = [{ data: false }]\r\n        }\r\n        let x = 0\r\n\r\n        return (\r\n            <div>\r\n                <Table style={{ margin: '0px' }}>\r\n                    <TableBody>\r\n                        <TableRow style={{ height: '10px', padding: '0px' }}>\r\n                            {this.props.headers.map(header => {\r\n                                return (\r\n                                    <TableCell style={{ fontWeight: 'bold', fontSize: '10pt', margin: '5px' }} key={header.name + 'tabletitle'} sortDirection={orderBy === header.orderbyname ? order : false}>\r\n                                        <Tooltip title={'Sort by ' + header.display} placement=\"top\" mouseEnterDelay=\"0.3\">\r\n                                            <TableSortLabel active={orderBy === header.orderbyname} direction={order} onClick={() => this.handleRequestSort(header.orderbyname)}>\r\n                                                {header.display}\r\n                                            </TableSortLabel>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                )\r\n                            })}\r\n                        </TableRow>\r\n\r\n                        {stableSort(dataset, getSorting(order, orderBy))\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map(row => {\r\n                                x++\r\n                                let cells = []\r\n                                this.props.columns.forEach(function(c) {\r\n                                    let push_cell = true\r\n                                    if (this.props.widgets) {\r\n                                        this.props.widgets.forEach(function(w) {\r\n                                            if (this.props.onClickColumn && this.props.onClickColumn === c) {\r\n                                                if (w.name === c) {\r\n                                                    if (w.widget === '') {\r\n                                                        cells.push(\r\n                                                            <TableCell key={c + 'DataTableCell' + x}>\r\n                                                                {' '}\r\n                                                                <Typography onClick={() => this.props.onClickFunction(row[c])} style={{ padding: '0px', fontSize: '10pt', color: 'blue', cursor: 'pointer', textDecoration: 'underline' }}>\r\n                                                                    {row[c]}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                        )\r\n                                                    } else {\r\n                                                        cells.push(\r\n                                                            <TableCell key={c + 'DataTableCell' + x}>\r\n                                                                {' '}\r\n                                                                <Typography style={{ padding: '0px', fontSize: '10pt' }}>\r\n                                                                    <IconButton onClick={() => this.props.onClickFunction(row[c])} style={{ width: '20px', height: '20px', padding: 0, margin: 0 }}>\r\n                                                                        {w.widget}\r\n                                                                    </IconButton>\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                        )\r\n                                                    }\r\n                                                    push_cell = false\r\n                                                }\r\n                                            } else {\r\n                                                if (w.name === c) {\r\n                                                    cells.push(\r\n                                                        <TableCell key={c + 'DataTableCell' + x}>\r\n                                                            {' '}\r\n                                                            <Typography style={{ padding: '0px', fontSize: '10pt' }}>{w.widget}</Typography>\r\n                                                        </TableCell>\r\n                                                    )\r\n                                                    push_cell = false\r\n                                                }\r\n                                            }\r\n                                        }, this)\r\n                                    }\r\n                                    if (push_cell === true) {\r\n                                        cells.push(\r\n                                            <TableCell key={c + 'DataTableCell' + x}>\r\n                                                {' '}\r\n                                                <Typography style={{ padding: '0px', fontSize: '10pt' }}>{row[c]}</Typography>\r\n                                            </TableCell>\r\n                                        )\r\n                                    }\r\n                                }, this)\r\n                                return (\r\n                                    <TableRow style={{ fontSize: '10pt', height: '0px', padding: '0px' }} key={'DataTable' + x}>\r\n                                        {cells}\r\n                                    </TableRow>\r\n                                )\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n                <div align=\"center\">\r\n                    <TablePagination colSpan={10} count={dataset.length} rowsPerPage={rowsPerPage} page={page} onChangePage={this.handleChangePage} onChangeRowsPerPage={this.handleChangeRowsPerPage} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDataTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(DataTable)\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport MoneyIcon from '@material-ui/icons/AttachMoneyRounded'\r\nimport { XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, Highlight, AreaSeries, Crosshair } from 'react-vis'\r\nimport 'react-vis/dist/style.css'\r\nimport moment from 'moment'\r\n\r\nconst formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2,\r\n})\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paperMain: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 150,\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(1),\r\n    },\r\n})\r\n\r\nclass DashboardView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            crosshairValues: [],\r\n            additionaldata: [],\r\n            lastDrawLocation: null,\r\n            crosshairDate: '',\r\n            crosshairValue: 0,\r\n            width: 0,\r\n            height: 400,\r\n        }\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\r\n    }\r\n\r\n    refreshData() {\r\n        //const { classes } = this.props\r\n        let amortization = []\r\n        let upsidedown = false\r\n        let currentDateFull = moment()\r\n        let currentDateQuick = moment()\r\n        let interest = this.props.interest / 100\r\n        let monthlyInterest = interest / 12\r\n        let remainingBalance = this.props.remainingBalance\r\n        let remainingBalanceWithAdditionalPayment = this.props.remainingBalance\r\n\r\n        let data = []\r\n        let additionaldata = []\r\n        let interestPaidFull = 0\r\n        let interestPaidQuick = 0\r\n        while (remainingBalance > 0) {\r\n            let totalMonthly = remainingBalance * monthlyInterest\r\n            interestPaidFull = interestPaidFull + totalMonthly\r\n            let principle = this.props.currentMortgagePayment - totalMonthly\r\n            if (principle < 0) {\r\n                upsidedown = true\r\n                remainingBalance = 0\r\n            } else {\r\n                remainingBalance = remainingBalance - principle\r\n                currentDateFull = moment(currentDateFull)\r\n                    .add(1, 'months')\r\n                    .calendar()\r\n\r\n                data.push({ x: moment(currentDateFull).valueOf(), y: remainingBalance })\r\n            }\r\n        }\r\n\r\n        while (remainingBalanceWithAdditionalPayment > 0) {\r\n            let totalMonthly = remainingBalanceWithAdditionalPayment * monthlyInterest\r\n            interestPaidQuick = interestPaidQuick + totalMonthly\r\n            let principle = this.props.currentMortgagePayment - totalMonthly\r\n            if (principle < 0) {\r\n                upsidedown = true\r\n                remainingBalanceWithAdditionalPayment = 0\r\n            } else {\r\n                upsidedown = false\r\n                remainingBalanceWithAdditionalPayment = remainingBalanceWithAdditionalPayment - principle\r\n                remainingBalanceWithAdditionalPayment = remainingBalanceWithAdditionalPayment - this.props.additionalMortgagePayment\r\n                currentDateQuick = moment(currentDateQuick)\r\n                    .add(1, 'months')\r\n                    .calendar()\r\n\r\n                additionaldata.push({\r\n                    x: moment(currentDateQuick).valueOf(),\r\n                    y: remainingBalanceWithAdditionalPayment,\r\n                })\r\n            }\r\n            // 'timestamp', 'interest', 'principle', 'remaining\r\n            let amortizationPoint = {}\r\n            amortizationPoint['timestampraw'] = moment(currentDateQuick).valueOf()\r\n            amortizationPoint['timestamp'] = moment(currentDateQuick).format('MMMM Do YYYY')\r\n            amortizationPoint['interest'] = formatter.format(totalMonthly)\r\n            amortizationPoint['interestraw'] = totalMonthly\r\n            amortizationPoint['principle'] = formatter.format(principle)\r\n            amortizationPoint['principleraw'] = principle\r\n            amortizationPoint['remaining'] = formatter.format(remainingBalanceWithAdditionalPayment)\r\n            amortizationPoint['remainingraw'] = remainingBalanceWithAdditionalPayment\r\n            amortization.push(amortizationPoint)\r\n        }\r\n\r\n        var diffInYears = moment(currentDateFull).diff(moment(currentDateQuick), 'years')\r\n        var yearsLeft = moment(currentDateQuick).diff(moment(), 'years')\r\n\r\n        this.setState({ upsidedown: upsidedown, additionaldata: additionaldata, data: data })\r\n\r\n        this.props.setInterestSaved(interestPaidFull, interestPaidQuick)\r\n        this.props.setYearsSaved(diffInYears, yearsLeft)\r\n        this.props.setAmortizationSchedule(amortization)\r\n    }\r\n    updateWindowDimensions() {\r\n        if (document.getElementById('MortgagePayoffOverTime') !== null) {\r\n            let widthDetect = document.getElementById('MortgagePayoffOverTime').clientWidth - 50\r\n            if (this.state.width !== widthDetect || this.state.height !== window.innerHeight) {\r\n                this.setState({\r\n                    width: widthDetect,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions)\r\n        window.removeEventListener('orientationchange', this.updateWindowDimensions)\r\n        window.removeEventListener('webkitfullscreenchange', this.handleExitFullscreen, false)\r\n        window.removeEventListener('mozfullscreenchange', this.handleExitFullscreen, false)\r\n        window.removeEventListener('msfullscreenchange', this.handleExitFullscreen, false)\r\n        window.removeEventListener('fullscreenchange', this.handleExitFullscreen, false)\r\n        window.addEventListener('orientationchange', this.updateWindowDimensions)\r\n        window.addEventListener('resize', this.updateWindowDimensions)\r\n        window.addEventListener('webkitfullscreenchange', this.handleExitFullscreen, false)\r\n        window.addEventListener('mozfullscreenchange', this.handleExitFullscreen, false)\r\n        window.addEventListener('fullscreenchange', this.handleExitFullscreen, false)\r\n        window.addEventListener('msfullscreenchange', this.handleExitFullscreen, false)\r\n        this.updateWindowDimensions()\r\n        this.refreshData()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.additionalMortgagePayment !== prevProps.additionalMortgagePayment) {\r\n            this.refreshData()\r\n        }\r\n        if (this.props.currentMortgagePayment !== prevProps.currentMortgagePayment) {\r\n            this.refreshData()\r\n        }\r\n        if (this.props.remainingBalance !== prevProps.remainingBalance) {\r\n            this.refreshData()\r\n        }\r\n        if (this.props.interest !== prevProps.interest) {\r\n            this.refreshData()\r\n        }\r\n    }\r\n\r\n    _onMouseLeave = () => {\r\n        this.setState({ crosshairValues: [] })\r\n    }\r\n\r\n    _onNearestX = (value, { index }) => {\r\n        let time = moment(value.x).format('MMMM Do YYYY')\r\n        this.setState({ crosshairValue: value.y, crosshairDate: time, crosshairValues: [this.state.additionaldata[index]] })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const lastDrawLocation = this.state.lastDrawLocation\r\n        if (this.state.upsidedown === true) {\r\n            return <div>You will never pay off the loan in this situation</div>\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <XYPlot\r\n                        onMouseLeave={this._onMouseLeave}\r\n                        animation\r\n                        margin={{ right: 100, left: 100 }}\r\n                        xType=\"time\"\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        xDomain={lastDrawLocation && [lastDrawLocation.left, lastDrawLocation.right]}\r\n                        yDomain={lastDrawLocation && [lastDrawLocation.bottom, lastDrawLocation.top]}\r\n                    >\r\n                        <VerticalGridLines style={{ opacity: 0.05 }} />\r\n                        <HorizontalGridLines style={{ opacity: 0.05 }} />\r\n                        <XAxis style={{ fill: 'white' }} tickTotal={5} />\r\n                        <YAxis style={{ fill: 'white' }} tickTotal={5} />\r\n                        <AreaSeries\r\n                            animation\r\n                            style={{\r\n                                fill: '#ffaaaa',\r\n                                stroke: '#992e24',\r\n                                strokeWidth: '2px',\r\n                                strokeDasharray: 5,\r\n                                strokeOpacity: 1,\r\n                                fillOpacity: 1,\r\n                                pointerEvents: this.props.brushing ? 'none' : 'auto',\r\n                            }}\r\n                            curve=\"curveNatural\"\r\n                            data={this.state.data}\r\n                        />\r\n                        <AreaSeries\r\n                            animation\r\n                            style={{\r\n                                fill: '#9AB9C8',\r\n                                stroke: '#407088',\r\n                                strokeDasharray: 5,\r\n                                strokeWidth: '2px',\r\n                                strokeOpacity: 1,\r\n                                fillOpacity: 1,\r\n                                pointerEvents: this.props.brushing ? 'none' : 'auto',\r\n                            }}\r\n                            curve=\"curveNatural\"\r\n                            data={this.state.additionaldata}\r\n                            onNearestX={this._onNearestX}\r\n                        />\r\n                        <Crosshair values={this.state.crosshairValues} style={{ line: { opacity: 0.25, width: '2px', backgroundColor: '#831613' } }}>\r\n                            <Chip\r\n                                avatar={\r\n                                    <Avatar style={{ backgroundColor: '#00e6ac' }}>\r\n                                        <MoneyIcon />\r\n                                    </Avatar>\r\n                                }\r\n                                label={this.state.crosshairDate + ': ' + formatter.format(this.state.crosshairValue)}\r\n                                className={classes.chip}\r\n                            />\r\n                        </Crosshair>\r\n\r\n                        <Highlight\r\n                            onBrushEnd={area => this.setState({ lastDrawLocation: area })}\r\n                            onDrag={area => {\r\n                                this.setState({\r\n                                    lastDrawLocation: {\r\n                                        bottom: lastDrawLocation.bottom + (area.top - area.bottom),\r\n                                        left: lastDrawLocation.left - (area.right - area.left),\r\n                                        right: lastDrawLocation.right - (area.right - area.left),\r\n                                        top: lastDrawLocation.top + (area.top - area.bottom),\r\n                                    },\r\n                                })\r\n                            }}\r\n                        />\r\n                    </XYPlot>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(DashboardView)\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport DataTable from '../components/structure/DataTable'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MortgagePayoffOverTime from '../components/visualization/MortgagePayoffOverTime'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Logo from '../static/logo.png'\r\nimport 'typeface-roboto'\r\n\r\nconst formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2,\r\n})\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paperMain: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 150,\r\n    },\r\n})\r\n\r\nclass DashboardView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.props = props\r\n        this.state = {\r\n            data: {},\r\n            saved: 0,\r\n            years: 0,\r\n            yearsLeft: 0,\r\n            amortization: [],\r\n            interestPaid: 0,\r\n            currentMortgagePayment: 1308.76,\r\n            remainingBalance: 150000,\r\n            interest: 3.75,\r\n            additionalMortgagePayment: 500,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.interestSaved = this.interestSaved.bind(this)\r\n        this.saveSession = this.saveSession.bind(this)\r\n        this.loadSession = this.loadSession.bind(this)\r\n        this.setAmortization = this.setAmortization.bind(this)\r\n    }\r\n\r\n    setAmortization(data) {\r\n        this.setState({ amortization: data })\r\n    }\r\n\r\n    interestSaved(interestPaidFull, interestPaidQuick) {\r\n        this.setState({ saved: interestPaidFull - interestPaidQuick, interestPaid: interestPaidQuick })\r\n    }\r\n    yearsSaved(years, yearsLeft) {\r\n        this.setState({ years: years, yearsLeft: yearsLeft })\r\n    }\r\n\r\n    handleChange(event, name) {\r\n        let value = event.target.value\r\n        value = value.replace(/\\$/g, '')\r\n        value = value.replace(/ /g, '')\r\n        value = value.replace(/,/g, '')\r\n        if (name === 'interest') {\r\n            if (event.target.value > 7) {\r\n                value = 7\r\n            }\r\n\r\n            if (event.target.value <= 0) {\r\n                value = 0.1\r\n            }\r\n        }\r\n        this.setState({ [name]: value }, this.saveSession)\r\n    }\r\n\r\n    saveSession() {\r\n        localStorage.setItem('financebreeze_currentMortgagePayment', this.state.currentMortgagePayment)\r\n        localStorage.setItem('financebreeze_remainingBalance', this.state.remainingBalance)\r\n        localStorage.setItem('financebreeze_interest', this.state.interest)\r\n        localStorage.setItem('financebreeze_additionalMortgagePayment', this.state.additionalMortgagePayment)\r\n    }\r\n\r\n    loadSession() {\r\n        let currentMortgagePayment = localStorage.getItem('financebreeze_currentMortgagePayment')\r\n        let remainingBalance = localStorage.getItem('financebreeze_remainingBalance')\r\n        let interest = localStorage.getItem('financebreeze_interest')\r\n        let additionalMortgagePayment = localStorage.getItem('financebreeze_additionalMortgagePayment')\r\n\r\n        if (currentMortgagePayment !== null && remainingBalance !== null && interest !== null && additionalMortgagePayment !== null) {\r\n            this.setState({ currentMortgagePayment: currentMortgagePayment, remainingBalance: remainingBalance, interest: interest, additionalMortgagePayment: additionalMortgagePayment })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadSession()\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <div>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <Paper>\r\n                            <div align=\"center\">\r\n                                <img alt=\"\" src={Logo} width={66} />\r\n                            </div>\r\n                            <form sclassName={classes.container} noValidate autoComplete=\"off\">\r\n                                <div align=\"center\">\r\n                                    <Grid container spacing={0}>\r\n                                        <Grid item xl={3} lg={3} md={6} sm={6} xs={6}>\r\n                                            <TextField\r\n                                                id=\"outlined-name\"\r\n                                                label=\"Mortgage Payment (PI)\"\r\n                                                className={classes.textField}\r\n                                                value={this.state.currentMortgagePayment}\r\n                                                onChange={event => this.handleChange(event, 'currentMortgagePayment')}\r\n                                                margin=\"normal\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xl={3} lg={3} md={6} sm={6} xs={6}>\r\n                                            <TextField id=\"outlined-name\" label=\"Remaining Balance\" className={classes.textField} value={this.state.remainingBalance} onChange={event => this.handleChange(event, 'remainingBalance')} margin=\"normal\" />\r\n                                        </Grid>\r\n                                        <Grid item xl={3} lg={3} md={6} sm={6} xs={6}>\r\n                                            <TextField id=\"outlined-name\" label=\"Interest Rate\" className={classes.textField} value={this.state.interest} onChange={event => this.handleChange(event, 'interest')} margin=\"normal\" />\r\n                                        </Grid>\r\n                                        <Grid item xl={3} lg={3} md={6} sm={6} xs={6}>\r\n                                            <TextField\r\n                                                id=\"outlined-name\"\r\n                                                label=\"Additional Payment\"\r\n                                                className={classes.textField}\r\n                                                value={this.state.additionalMortgagePayment}\r\n                                                onChange={event => this.handleChange(event, 'additionalMortgagePayment')}\r\n                                                margin=\"normal\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                            </form>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <div id=\"MortgagePayoffOverTime\">\r\n                            <Card>\r\n                                <CardHeader title={'Mortgage Early Payoff Calculator'} subheader={'Plan for your future with FinanceBreeze.com'} />\r\n                                <CardContent>\r\n                                    <MortgagePayoffOverTime\r\n                                        brushing={false}\r\n                                        additionalMortgagePayment={this.state.additionalMortgagePayment}\r\n                                        currentMortgagePayment={this.state.currentMortgagePayment}\r\n                                        remainingBalance={this.state.remainingBalance}\r\n                                        interest={this.state.interest}\r\n                                        setInterestSaved={this.interestSaved.bind(this)}\r\n                                        setYearsSaved={this.yearsSaved.bind(this)}\r\n                                        setAmortizationSchedule={this.setAmortization.bind(this)}\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xl={3} lg={3} md={6} sm={12} xs={12}>\r\n                        <Card>\r\n                            <CardHeader subheader={'Years Saved'} />\r\n                            <CardContent>\r\n                                <div align=\"center\">\r\n                                    <Typography variant=\"h4\"> {this.state.years + ' Years'} </Typography>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xl={3} lg={3} md={6} sm={12} xs={12}>\r\n                        <Card>\r\n                            <CardHeader subheader={'Interest Saved'} />\r\n                            <CardContent>\r\n                                <div align=\"center\">\r\n                                    <Typography variant=\"h4\"> {formatter.format(this.state.saved)} </Typography>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xl={3} lg={3} md={6} sm={12} xs={12}>\r\n                        <Card>\r\n                            <CardHeader subheader={'Years Left'} />\r\n                            <CardContent>\r\n                                <div align=\"center\">\r\n                                    <Typography variant=\"h4\"> {this.state.yearsLeft + ' Years'} </Typography>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xl={3} lg={3} md={6} sm={12} xs={12}>\r\n                        <Card>\r\n                            <CardHeader subheader={'Interest Paid'} />\r\n                            <CardContent>\r\n                                <div align=\"center\">\r\n                                    <Typography variant=\"h4\"> {formatter.format(this.state.interestPaid)} </Typography>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardHeader subheader={'Amortization Schedule'} />\r\n                            <CardContent>\r\n                                <DataTable\r\n                                    order=\"asc\"\r\n                                    orderBy=\"timestampraw\"\r\n                                    allowOrdering={false}\r\n                                    rowsPerPage={25}\r\n                                    headers={[\r\n                                        { name: 'timestamp', display: 'Date', orderbyname: 'timestampraw' },\r\n                                        { name: 'interest', display: 'Interest', orderbyname: 'interestraw' },\r\n                                        { name: 'principle', display: 'Principle', orderbyname: 'principleraw' },\r\n                                        { name: 'remaining', display: 'Remaining', orderbyname: 'remainingraw' },\r\n                                    ]}\r\n                                    data={this.state.amortization}\r\n                                    columns={['timestamp', 'interest', 'principle', 'remaining']}\r\n                                />\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(DashboardView)\r\n","import React, { Component } from 'react';\n\nclass SearchView extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they<br />\n\t\t\t\they\n\t\t\t\they\n\t\t\t\they\n\t\t\t\they\n\t\t\t\they\n\t\t\t\they\n\t\t\t\they\n\t\t\t\they\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SearchView;\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nexport const Theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#f2f6f5',\r\n        },\r\n        secondary: {\r\n            main: '#af0404',\r\n        },\r\n    },\r\n    overrides: {\r\n        MuiDrawer: {\r\n            paper: {\r\n                backgroundColor: '#142033',\r\n            },\r\n        },\r\n        MuiDivider: {\r\n            root: {\r\n                backgroundColor: '#404854',\r\n            },\r\n        },\r\n        MuiListItemIcon: {\r\n            root: {\r\n                color: 'inherit',\r\n                marginRight: 0,\r\n                '& svg': {\r\n                    fontSize: 20,\r\n                },\r\n            },\r\n        },\r\n    },\r\n\r\n    typography: {\r\n        fontSize: 14,\r\n        fontFamily: ['\"Titillium Web\"', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\r\n    },\r\n})\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\r\nimport DashboardView from '../../pages/DashboardView'\r\nimport SearchView from '../../pages/SearchView'\r\nimport { Theme } from '../../theme'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nconst drawerWidth = 256\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: '5px',\r\n        fontSize: '8pt',\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        minHeight: '100vh',\r\n    },\r\n    drawer: {\r\n        [Theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appContent: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    mainContent: {\r\n        flex: 1,\r\n        padding: '15px 15px 0',\r\n    },\r\n}\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        // Don't call this.setState() here!\r\n        this.state = {\r\n            mobileOpen: false,\r\n            landing: 0,\r\n        }\r\n        this.handlePageLanding = this.handlePageLanding.bind(this)\r\n    }\r\n\r\n    handleDrawerToggle = () => {\r\n        this.setState(state => ({ mobileOpen: !state.mobileOpen }))\r\n    }\r\n\r\n    handlePageLanding(code) {\r\n        this.setState({ landing: code })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const landingcode = this.state.landing\r\n\r\n        const mainpage = []\r\n        if (landingcode === 0) {\r\n            mainpage.push(<DashboardView key=\"main\" />)\r\n        } else if (landingcode === 1) {\r\n            mainpage.push(<SearchView key=\"search\" />)\r\n        }\r\n\r\n        return (\r\n            <MuiThemeProvider theme={Theme}>\r\n                <div className={classes.root}>\r\n                    <div className={classes.appContent}>\r\n                        <Container maxWidth=\"lg\">\r\n                            <main className={classes.mainContent}>{mainpage}</main>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(Main)\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/structure/Main\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter>\n\t\t<App />\n\t\t</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.d9714682.png\";"],"sourceRoot":""}